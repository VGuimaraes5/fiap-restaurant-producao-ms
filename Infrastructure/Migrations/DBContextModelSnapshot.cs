// <auto-generated />
using System;
using Infrastructure.DataProviders;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(DBContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Domain.Entities.Categoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("tb_Categoria", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ada751db-8553-493f-b308-70bd29aed106"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Lanche"
                        },
                        new
                        {
                            Id = new Guid("cf412102-35da-43d8-9c3c-b72546104c72"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Acompanhamento"
                        },
                        new
                        {
                            Id = new Guid("5117243c-b007-49e8-9a30-842ec79248ae"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Bebida"
                        },
                        new
                        {
                            Id = new Guid("32f0c5f0-d9ba-40e2-8d7a-57eed4727e2b"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Sobremesa"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("varchar(11)");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("UserId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("tb_Cliente", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.ItemPedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Observacao")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Observacao");

                    b.Property<Guid>("PedidoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("tb_ItemPedido", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Pagamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("PedidoId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TipoPagamento")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId")
                        .IsUnique();

                    b.ToTable("tb_Pagamento", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Pedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ClienteId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Senha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("Senha")
                        .IsUnique();

                    b.ToTable("tb_Pedido", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CategoriaId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(200)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(19,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("tb_Produto", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("1fbcae3a-e1ff-4a95-ac90-b2880d6717ec"),
                            CategoriaId = new Guid("ada751db-8553-493f-b308-70bd29aed106"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Hamburguer",
                            Valor = 8.00m
                        },
                        new
                        {
                            Id = new Guid("f2846fe2-c038-4220-bc99-dd9fdeb5d4e4"),
                            CategoriaId = new Guid("ada751db-8553-493f-b308-70bd29aed106"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Cheeseburger",
                            Valor = 9.00m
                        },
                        new
                        {
                            Id = new Guid("d4af38ba-ded1-4c94-b0a3-b27a40bf3a20"),
                            CategoriaId = new Guid("ada751db-8553-493f-b308-70bd29aed106"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "X Salada",
                            Valor = 10.00m
                        },
                        new
                        {
                            Id = new Guid("c59b8cd8-b665-4841-9deb-5b0300427e16"),
                            CategoriaId = new Guid("ada751db-8553-493f-b308-70bd29aed106"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "X Bacon",
                            Valor = 11.00m
                        },
                        new
                        {
                            Id = new Guid("461098b6-4230-42a9-a947-a915fa2135e0"),
                            CategoriaId = new Guid("ada751db-8553-493f-b308-70bd29aed106"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "X Tudo",
                            Valor = 12.00m
                        },
                        new
                        {
                            Id = new Guid("436e3a79-87e9-4441-b07f-3dd1e9fbdbd3"),
                            CategoriaId = new Guid("cf412102-35da-43d8-9c3c-b72546104c72"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Batata Frita Pequena",
                            Valor = 5.00m
                        },
                        new
                        {
                            Id = new Guid("3d2509e7-7a34-460b-8d30-1f630e44f955"),
                            CategoriaId = new Guid("cf412102-35da-43d8-9c3c-b72546104c72"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Batata Frita Media",
                            Valor = 7.00m
                        },
                        new
                        {
                            Id = new Guid("d92c1a55-6138-4925-b8b3-382763707a30"),
                            CategoriaId = new Guid("cf412102-35da-43d8-9c3c-b72546104c72"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Batata Frita Grande",
                            Valor = 9.00m
                        },
                        new
                        {
                            Id = new Guid("7e7a5e99-836f-49a2-ba52-66dc1de6161b"),
                            CategoriaId = new Guid("cf412102-35da-43d8-9c3c-b72546104c72"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Chicken Nuggets 4 unidades",
                            Valor = 6.00m
                        },
                        new
                        {
                            Id = new Guid("42fa3ba6-9c63-49a0-bb32-60c28b798d05"),
                            CategoriaId = new Guid("cf412102-35da-43d8-9c3c-b72546104c72"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Chicken Nuggets 8 unidades",
                            Valor = 12.00m
                        },
                        new
                        {
                            Id = new Guid("4a6015b3-93a9-47bf-b2a2-0e38e845656d"),
                            CategoriaId = new Guid("cf412102-35da-43d8-9c3c-b72546104c72"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Chicken Nuggets 12 unidades",
                            Valor = 16.00m
                        },
                        new
                        {
                            Id = new Guid("a9a95a2f-e9ce-467a-bfff-944b9229cf58"),
                            CategoriaId = new Guid("5117243c-b007-49e8-9a30-842ec79248ae"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Coca Cola Pequena",
                            Valor = 6.00m
                        },
                        new
                        {
                            Id = new Guid("31503b1b-0192-4c39-a198-bc57ec8629fd"),
                            CategoriaId = new Guid("5117243c-b007-49e8-9a30-842ec79248ae"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Coca Cola Media",
                            Valor = 8.00m
                        },
                        new
                        {
                            Id = new Guid("449d33a1-327d-4614-b32a-88f48a044477"),
                            CategoriaId = new Guid("5117243c-b007-49e8-9a30-842ec79248ae"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Coca Cola Grande",
                            Valor = 10.00m
                        },
                        new
                        {
                            Id = new Guid("ca37dba7-d602-4e25-b5c4-547f71448cc3"),
                            CategoriaId = new Guid("32f0c5f0-d9ba-40e2-8d7a-57eed4727e2b"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Sorverte de Baunilha",
                            Valor = 3.00m
                        },
                        new
                        {
                            Id = new Guid("55b02f56-70ec-4169-acca-43f88e08852e"),
                            CategoriaId = new Guid("32f0c5f0-d9ba-40e2-8d7a-57eed4727e2b"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Sorverte de Chocolate",
                            Valor = 3.00m
                        },
                        new
                        {
                            Id = new Guid("dbd44ec9-1262-45b4-89aa-8cc8e6f3a6f6"),
                            CategoriaId = new Guid("32f0c5f0-d9ba-40e2-8d7a-57eed4727e2b"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Sorverte de Misto",
                            Valor = 3.00m
                        },
                        new
                        {
                            Id = new Guid("28e469b2-3748-4cf9-9698-7eb80b12134e"),
                            CategoriaId = new Guid("32f0c5f0-d9ba-40e2-8d7a-57eed4727e2b"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Sundae de Baunilha",
                            Valor = 6.00m
                        },
                        new
                        {
                            Id = new Guid("2f2027af-d827-4180-bb58-e13f60ff4527"),
                            CategoriaId = new Guid("32f0c5f0-d9ba-40e2-8d7a-57eed4727e2b"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Sundae de Chocolate",
                            Valor = 6.00m
                        },
                        new
                        {
                            Id = new Guid("0793a638-d6b3-4335-b57f-4c32224b093d"),
                            CategoriaId = new Guid("32f0c5f0-d9ba-40e2-8d7a-57eed4727e2b"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Sundae Misto",
                            Valor = 6.00m
                        });
                });

            modelBuilder.Entity("Domain.Entities.ItemPedido", b =>
                {
                    b.HasOne("Domain.Entities.Pedido", "Pedido")
                        .WithMany("ItensPedido")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Produto", "Produto")
                        .WithMany("ItensPedido")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Domain.Entities.Pagamento", b =>
                {
                    b.HasOne("Domain.Entities.Pedido", "Pedido")
                        .WithOne("Pagamento")
                        .HasForeignKey("Domain.Entities.Pagamento", "PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("Domain.Entities.Pedido", b =>
                {
                    b.HasOne("Domain.Entities.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Domain.Entities.Produto", b =>
                {
                    b.HasOne("Domain.Entities.Categoria", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("Domain.Entities.Categoria", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("Domain.Entities.Pedido", b =>
                {
                    b.Navigation("ItensPedido");

                    b.Navigation("Pagamento");
                });

            modelBuilder.Entity("Domain.Entities.Produto", b =>
                {
                    b.Navigation("ItensPedido");
                });
#pragma warning restore 612, 618
        }
    }
}
